// <auto-generated />
using System;
using Fasserly.Database;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Fasserly.Database.Migrations
{
    [DbContext(typeof(DatabaseContext))]
    [Migration("20200630205233_test")]
    partial class test
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Fasserly.Database.Entities.Category", b =>
                {
                    b.Property<Guid>("CategoryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Label")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("CategoryId");

                    b.ToTable("Categories");
                });

            modelBuilder.Entity("Fasserly.Database.Entities.Comment", b =>
                {
                    b.Property<Guid>("CommentId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("DateOfComment")
                        .HasColumnType("datetime2");

                    b.Property<string>("Text")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("TrainingId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("UserFasserlyId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("CommentId");

                    b.HasIndex("TrainingId");

                    b.HasIndex("UserFasserlyId");

                    b.ToTable("Comments");
                });

            modelBuilder.Entity("Fasserly.Database.Entities.Promotion", b =>
                {
                    b.Property<Guid>("PromotionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("DateOfEnd")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateOfPromotion")
                        .HasColumnType("datetime2");

                    b.Property<int>("Percent")
                        .HasColumnType("int");

                    b.HasKey("PromotionId");

                    b.ToTable("Promotions");
                });

            modelBuilder.Entity("Fasserly.Database.Entities.Training", b =>
                {
                    b.Property<Guid>("TrainingId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("CategoryId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("DateOfCreation")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("Language")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal?>("Price")
                        .HasColumnType("decimal(8,6)");

                    b.Property<Guid?>("PromotionId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int?>("Rating")
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.HasKey("TrainingId");

                    b.HasIndex("CategoryId");

                    b.HasIndex("PromotionId");

                    b.ToTable("Trainings");
                });

            modelBuilder.Entity("Fasserly.Database.Entities.UserFasserly", b =>
                {
                    b.Property<Guid>("UserFasserlyId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("TrainingId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("UserFasserlyId");

                    b.HasIndex("TrainingId");

                    b.ToTable("UserFasserlies");
                });

            modelBuilder.Entity("Fasserly.Database.Entities.Comment", b =>
                {
                    b.HasOne("Fasserly.Database.Entities.Training", "Training")
                        .WithMany("comments")
                        .HasForeignKey("TrainingId");

                    b.HasOne("Fasserly.Database.Entities.UserFasserly", "UserFasserly")
                        .WithMany()
                        .HasForeignKey("UserFasserlyId");
                });

            modelBuilder.Entity("Fasserly.Database.Entities.Training", b =>
                {
                    b.HasOne("Fasserly.Database.Entities.Category", "category")
                        .WithMany("Trainings")
                        .HasForeignKey("CategoryId");

                    b.HasOne("Fasserly.Database.Entities.Promotion", null)
                        .WithMany("trainings")
                        .HasForeignKey("PromotionId");
                });

            modelBuilder.Entity("Fasserly.Database.Entities.UserFasserly", b =>
                {
                    b.HasOne("Fasserly.Database.Entities.Training", null)
                        .WithMany("UserFasserlies")
                        .HasForeignKey("TrainingId");
                });
#pragma warning restore 612, 618
        }
    }
}
